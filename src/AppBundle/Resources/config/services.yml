services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    AppBundle\:
        resource: '../../*'
        exclude: '../../{Entity,Exception}'

    AppBundle\Controller\:
        resource: '../../Controller'
        public: true
        tags: ['controller.service_arguments']

    AppBundle\Entity\Manager\:
        resource: '../../Entity/Manager'

    AppBundle\Controller\ExceptionController:
      public: true
      arguments:
        $environment: '%kernel.environment%'

    AppBundle\Controller\SwaggerDocsController:
        public: true
        arguments:
            $kernelRootDir: '%kernel.root_dir%'

    AppBundle\Command\UpdateFrontendCommand:
        arguments:
            $kernelCacheDir: '%kernel.cache_dir%'
            $kernelProjectDir: '%kernel.project_dir%'
            $apiVersion: '%ilios_api_version%'
            $environment: '%kernel.environment%'

    AppBundle\Entity\Manager\AlertManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\Alert'
    AppBundle\Entity\Manager\AlertChangeTypeManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\AlertChangeType'
    AppBundle\Entity\Manager\ApplicationConfigManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\ApplicationConfig'
    AppBundle\Entity\Manager\AuditLogManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\AuditLog'
    AppBundle\Entity\Manager\AuthenticationManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\Authentication'
    AppBundle\Entity\Manager\CohortManager:
        public: true
        class: AppBundle\Entity\Manager\CohortManager
        arguments:
            $class: 'AppBundle\Entity\Cohort'
    AppBundle\Entity\Manager\CourseManager:
        public: true
        class: AppBundle\Entity\Manager\CourseManager
        arguments:
            $class: 'AppBundle\Entity\Course'
    AppBundle\Entity\Manager\CourseLearningMaterialManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\CourseLearningMaterial'
    AppBundle\Entity\Manager\CurriculumInventoryAcademicLevelManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\CurriculumInventoryAcademicLevel'
    AppBundle\Entity\Manager\CurriculumInventoryExportManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\CurriculumInventoryExport'
    AppBundle\Entity\Manager\CurriculumInventoryInstitutionManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\CurriculumInventoryInstitution'
    AppBundle\Entity\Manager\CurriculumInventoryReportManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\CurriculumInventoryReport'
    AppBundle\Entity\Manager\CurriculumInventorySequenceBlockManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\CurriculumInventorySequenceBlock'
    AppBundle\Entity\Manager\CurriculumInventorySequenceManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\CurriculumInventorySequence'
    AppBundle\Entity\Manager\IlmSessionManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\IlmSession'
    AppBundle\Entity\Manager\LearningMaterialManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\LearningMaterial'
    AppBundle\Entity\Manager\MeshDescriptorManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\MeshDescriptor'
    AppBundle\Entity\Manager\ObjectiveManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\Objective'
    AppBundle\Entity\Manager\OfferingManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\Offering'
    AppBundle\Entity\Manager\PendingUserUpdateManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\PendingUserUpdate'
    AppBundle\Entity\Manager\ProgramYearManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\ProgramYear'
    AppBundle\Entity\Manager\ProgramYearStewardManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\ProgramYearSteward'
    AppBundle\Entity\Manager\SchoolConfigManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\SchoolConfig'
    AppBundle\Entity\Manager\SchoolManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\School'
    AppBundle\Entity\Manager\SessionManager:
        public: true
        class: AppBundle\Entity\Manager\SessionManager
        arguments:
            $class: 'AppBundle\Entity\Session'
    AppBundle\Entity\Manager\SessionDescriptionManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\SessionDescription'
    AppBundle\Entity\Manager\SessionLearningMaterialManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\SessionLearningMaterial'
    AppBundle\Entity\Manager\UserManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\User'
    AppBundle\Entity\Manager\UserRoleManager:
        public: true
        arguments:
            $class: 'AppBundle\Entity\UserRole'

    AppBundle\EventListener\LogEntityChanges:
        tags:
        - { name: doctrine.event_listener, event: onFlush }
        calls:
        - [ setContainer, ['@service_container'] ]

    AppBundle\EventListener\TrackApiUsageListener:
        tags:
        - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }

    AppBundle\EventListener\TimestampEntityChanges:
        tags:
        - { name: doctrine.event_listener, event: onFlush }

    AppBundle\EventListener\RemoveOrphanedObjectives:
        tags:
        - { name: doctrine.event_listener, event: onFlush }

    AppBundle\EventListener\ValidApiObjectListener:
        arguments:
            $validApiObjects: '%ilios_api_valid_endpoints%'
        tags: [{ name: kernel.event_listener, event: kernel.controller, method: onKernelController }]

    AppBundle\Listener\AddJwtHeader:
        tags:
        - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }

    ilios.cache:
      class: 'Doctrine\Common\Cache\Cache'
      factory: ['AppBundle\Service\CacheFactory', 'createCache']
      arguments:
        $environment: '%kernel.environment%'

    AppBundle\Service\EntityMetadata:
      arguments:
        $cache: '@ilios.cache'

    AppBundle\Service\Config:
      public: true

    AppBundle\Service\DataimportFileLocator:
      public: true

    AppBundle\Service\Filesystem:
      public: true

    AppBundle\Service\Directory:
      public: true

    AppBundle\Service\TemporaryFileSystem:
      arguments:
        $kernelRootDirectory: '%kernel.root_dir%'

    AppBundle\Service\LoggerQueue:
      public: true
      tags:
      - { name: kernel.event_listener, event: kernel.response, method: flush }
      - { name: kernel.event_listener, event: console.terminate, method: flush }

    AppBundle\Service\CurriculumInventoryReportDecoratorFactory:
      arguments:
        $decoratorClassName: '\AppBundle\Classes\CurriculumInventoryReportDecorator'

    AppBundle\Service\Timestamper:
      tags:
      - { name: kernel.event_listener, event: kernel.response, method: flush }
      - { name: kernel.event_listener, event: console.terminate, method: flush }

    AppBundle\Service\UserMaterialFactory:
      arguments:
        $decoratorClassName: '\AppBundle\Classes\UserMaterial'

    AppBundle\Service\CrossingGuard:
      tags:
      - { name: kernel.event_listener, event: kernel.request, priority: 256 }

    AppBundle\Service\SwaggerDocBuilder:
        arguments:
            $apiVersion: '%ilios_api_version%'

    Symfony\Component\Serializer\SerializerInterface:
        factory:   ['AppBundle\Service\SerializerFactory', createSerializer]