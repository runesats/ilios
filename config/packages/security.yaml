security:
  enable_authenticator_manager: true
  access_control:
    - { path: ^/api/doc, roles: PUBLIC_ACCESS }
    - { path: ^/(auth|application)/(login|config|logout), roles: PUBLIC_ACCESS }
    - { path: '^/', roles: IS_AUTHENTICATED_FULLY }
  access_decision_manager:
    allow_if_all_abstain: false
    strategy: unanimous
  password_hashers:
    App\Classes\SessionUserInterface:
      algorithm: auto
      migrate_from:
        - bcrypt
  providers:
    session_user:
      id: App\Service\SessionUserProvider
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    authenticated_auth:
      pattern:    ^/auth
      stateless: true
      custom_authenticators:
        - App\Security\JsonWebTokenAuthenticator
      provider: session_user
    authenticated_application:
      pattern:    ^/application
      stateless: true
      custom_authenticators:
        - App\Security\JsonWebTokenAuthenticator
      provider: session_user
    upload:
      pattern:    ^/upload
      stateless: true
      custom_authenticators:
        - App\Security\JsonWebTokenAuthenticator
      provider: session_user
    errors:
      pattern:    ^/errors
      stateless: true
      custom_authenticators:
        - App\Security\JsonWebTokenAuthenticator
      provider: session_user
    default:
      pattern:    ^/api
      stateless: true
      custom_authenticators:
        - App\Security\JsonWebTokenAuthenticator
      provider: session_user

